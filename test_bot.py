#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import (
    detect_gender_by_name,
    detect_gender_correction,
    parse_ingredients,
    find_matching_recipes,
    get_gender_pronoun
)

def test_gender_detection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª–∞ –ø–æ –∏–º–µ–Ω–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª–∞ –ø–æ –∏–º–µ–Ω–∏...")
    
    test_cases = [
        ("–ê–Ω–Ω–∞", "female"),
        ("–ê–ª–µ–∫—Å–∞–Ω–¥—Ä", "male"),
        ("–ú–∞—Ä–∏—è", "female"),
        ("–î–º–∏—Ç—Ä–∏–π", "male"),
        ("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ–ò–º—è", "unknown")
    ]
    
    for name, expected in test_cases:
        result = detect_gender_by_name(name)
        status = "‚úÖ" if result == expected else "‚ùå"
        print(f"  {status} {name} -> {result} (–æ–∂–∏–¥–∞–ª–æ—Å—å {expected})")

def test_gender_correction():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ø—Ä–∞–≤–∫—É –ø–æ–ª–∞"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ø—Ä–∞–≤–∫—É –ø–æ–ª–∞...")
    
    test_cases = [
        ("—è –º–∞–ª—å—á–∏–∫", "male"),
        ("—è –¥–µ–≤–æ—á–∫–∞", "female"),
        ("—è –º—É–∂—á–∏–Ω–∞", "male"),
        ("—è –∂–µ–Ω—â–∏–Ω–∞", "female"),
        ("–æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", None)
    ]
    
    for text, expected in test_cases:
        result = detect_gender_correction(text)
        status = "‚úÖ" if result == expected else "‚ùå"
        print(f"  {status} '{text}' -> {result} (–æ–∂–∏–¥–∞–ª–æ—Å—å {expected})")

def test_ingredient_parsing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤...")
    
    test_cases = [
        ("–º–∞–∫–∞—Ä–æ–Ω—ã, —è–π—Ü–∞, –±–µ–∫–æ–Ω", ["–º–∞–∫–∞—Ä–æ–Ω—ã", "—è–π—Ü–∞", "–±–µ–∫–æ–Ω"]),
        ("–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å; –ª—É–∫; –º–æ—Ä–∫–æ–≤—å", ["–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å", "–ª—É–∫", "–º–æ—Ä–∫–æ–≤—å"]),
        ("–º—è—Å–æ\n—Ä–∏—Å\n–æ–≤–æ—â–∏", ["–º—è—Å–æ", "—Ä–∏—Å", "–æ–≤–æ—â–∏"]),
        ("–ø—Ä–æ—Å—Ç–æ —Å–ª–æ–≤–∞", ["–ø—Ä–æ—Å—Ç–æ", "—Å–ª–æ–≤–∞"])
    ]
    
    for text, expected in test_cases:
        result = parse_ingredients(text)
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –±–µ–∑ —É—á–µ—Ç–∞ –ø–æ—Ä—è–¥–∫–∞
        status = "‚úÖ" if set(result) == set(expected) else "‚ùå"
        print(f"  {status} '{text}' -> {result}")

def test_recipe_matching():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–±–æ—Ä —Ä–µ—Ü–µ–ø—Ç–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–±–æ—Ä —Ä–µ—Ü–µ–ø—Ç–æ–≤...")
    
    test_cases = [
        (["–º–∞–∫–∞—Ä–æ–Ω—ã", "—è–π—Ü–∞", "–±–µ–∫–æ–Ω", "—Å—ã—Ä"], 1),  # –î–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ –ø–∞—Å—Ç—É –∫–∞—Ä–±–æ–Ω–∞—Ä–∞
        (["–≥–æ–≤—è–¥–∏–Ω–∞", "—Å–≤–µ–∫–ª–∞", "–∫–∞–ø—É—Å—Ç–∞"], 1),     # –î–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ –±–æ—Ä—â
        (["—Ö–ª–µ–±", "–º–æ–ª–æ–∫–æ"], 0),                    # –ù–µ –¥–æ–ª–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤
    ]
    
    for ingredients, expected_min in test_cases:
        result = find_matching_recipes(ingredients)
        status = "‚úÖ" if len(result) >= expected_min else "‚ùå"
        print(f"  {status} {ingredients} -> {len(result)} —Ä–µ—Ü–µ–ø—Ç–æ–≤ (–º–∏–Ω–∏–º—É–º {expected_min})")
        for match in result:
            print(f"    - {match['name']} (–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç: {match['missing_required']})")

def test_pronouns():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è...")
    
    test_cases = [
        ("male", {"you": "—Å—ã–Ω–æ–∫", "address": "—Å—ã–Ω–æ–∫"}),
        ("female", {"you": "–¥–æ—á–∫–∞", "address": "–¥–æ—á–∫–∞"}),
        ("unknown", {"you": "–¥–µ—Ç–∫–∞", "address": "–¥–µ—Ç–∫–∞"})
    ]
    
    for gender, expected in test_cases:
        result = get_gender_pronoun(gender)
        status = "‚úÖ" if result["you"] == expected["you"] and result["address"] == expected["address"] else "‚ùå"
        print(f"  {status} {gender} -> {result['you']}, {result['address']}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–≥–æ –±–æ—Ç–∞...")
    print("=" * 50)
    
    test_gender_detection()
    test_gender_correction()
    test_ingredient_parsing()
    test_recipe_matching()
    test_pronouns()
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
